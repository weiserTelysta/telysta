version: '3.8'

services:
  redis:
    image: "redis"
    container_name:  "redis"
    restart:  always
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
    volumes:
      - ./volumes/redis:/data
    networks:
      - telystaweb
  db:
    image: "mysql"
    container_name: "db"
    restart: always
    env_file: .env
    environment: 
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ALLOW_EMPTY_PASSWORD: ${DB_ALLOW_EMPTY_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DB_PORT: ${DB_PORT}
      TZ: ${TZ}
    command:
      --character-set-server=UTF8MB4
      --max_connections=1000
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
    volumes:
      - ./volumes/db/data:/var/lib/mysql
    networks:
      - telystaweb
    depends_on:
      redis:
        condition: service_healthy
  telystafront:
    build: ./telystafront
    container_name: "telystafront"
    restart: always
    ports: 
      - "80:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"] 
    networks:
      - telystaweb
    depends_on:
      telystaback:
        condition: service_healthy
  telystaback:
    build: ./telystaback
    restart: always
    container_name: "telystaback"
    environment:
       - DB_HOST=db
       - DB_NAME=${DB_NAME}
       - DB_USER=${DB_USER}
       - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./volumes/telystaback/sock:/data/sock
    networks:
      - telystaweb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/home/health/"]
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
networks:
  telystaweb:
    driver: "bridge"